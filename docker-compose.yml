version: '3.8'

services:
  llm-proxy:
    build:
      context: .
      dockerfile: Dockerfile
    image: enhanced-llm-proxy:latest
    container_name: llm-proxy
    restart: unless-stopped
    
    # GPU support (for NVIDIA GPUs)
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    ports:
      - "8001:8001"      # Main API port
      - "11434:11434"    # Ollama port
      - "9090:9090"      # Metrics port (if enabled)
    
    volumes:
      # Persistent storage for models
      - ollama-models:/root/.ollama/models
      - ./data:/app/data
      - ./logs:/app/data/logs
      
      # Configuration
      - ./.env:/app/.env:ro
      
      # Optional: Custom models directory
      # - ./models:/app/models:ro
    
    environment:
      # Override any settings here
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8001
      - LOG_LEVEL=INFO
      
      # Ollama settings
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
      - OLLAMA_KEEP_ALIVE=5m
      - OLLAMA_MAX_LOADED_MODELS=4
      
      # GPU settings (adjust based on your GPU)
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      
      # Memory limits
      - MAX_MEMORY_MB=16384
      - MODEL_MEMORY_LIMIT_MB=12288
      - CACHE_MEMORY_LIMIT_MB=2048
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s
    
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    
    networks:
      - llm-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: llm-proxy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - llm-proxy
    networks:
      - llm-network
    profiles:
      - with-nginx

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: llm-proxy-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - llm-network
    profiles:
      - with-monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: llm-proxy-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
    networks:
      - llm-network
    profiles:
      - with-monitoring

volumes:
  ollama-models:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  llm-network:
    driver: bridge
